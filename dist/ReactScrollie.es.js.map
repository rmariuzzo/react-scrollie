{"version":3,"file":"ReactScrollie.es.js","sources":["../src/ReactScrollie.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport debounce from 'lodash.debounce'\n\n/**\n * The Scrollie component.\n */\nclass Scrollie extends Component {\n  /**\n   * Construct a Scrollie object instance.\n   * @param {Object} props\n   */\n  constructor(props) {\n    super(props)\n    this.state = {\n      startX: false,\n      endX: false,\n      startY: false,\n      endY: false\n    }\n    this.updateScrollInfo = debounce(this.updateScrollInfo.bind(this), 50)\n  }\n\n  /**\n   * When a Scrollie component mounts listen to scroll events and immediately update scroll info.\n   */\n  componentDidMount() {\n    this.root.addEventListener('scroll', this.updateScrollInfo)\n    this.updateScrollInfo()\n  }\n\n  /**\n   * When a Scrollie component will unmount then unlisten to scroll events.\n   */\n  componentWillUnmount() {\n    this.root.removeEventListener('scroll', this.updateScrollInfo)\n  }\n\n  /**\n   * Render the Scrollie component.\n   */\n  render() {\n    const { children, component, ...more } = this.props\n    const Component = component\n    const scrollInfo = { ...this.state }\n\n    return (\n      <Component {...more} ref={el => (this.root = el)}>\n        {children(scrollInfo)}\n      </Component>\n    )\n  }\n\n  /**\n   * Update scroll info based on the current rendered node.\n   */\n  updateScrollInfo() {\n    const { scrollWidth, scrollLeft, clientWidth } = this.root\n    const startX = scrollLeft === 0\n    const endX = clientWidth + scrollLeft >= scrollWidth\n\n    const { scrollHeight, scrollTop, clientHeight } = this.root\n    const startY = scrollTop === 0\n    const endY = clientHeight + scrollTop >= scrollHeight\n\n    if (typeof this.props.onScroll === 'function') {\n      this.props.onScroll({\n        left: startX,\n        top: startY,\n        right: endX,\n        bottom: endY\n      })\n    }\n\n    this.setState({ startX, endX, startY, endY })\n  }\n}\n\nScrollie.propTypes = {\n  children: PropTypes.func.isRequired,\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  onScroll: PropTypes.func\n}\n\nScrollie.defaultProps = {\n  component: 'div'\n}\n\nexport default Scrollie\n"],"names":["Scrollie","props","state","updateScrollInfo","debounce","_this","bind","Component","root","addEventListener","this","removeEventListener","children","component","more","scrollInfo","React","ref","_this2","el","scrollWidth","scrollLeft","startX","endX","clientWidth","scrollHeight","scrollTop","startY","endY","clientHeight","onScroll","setState","propTypes","PropTypes","func","isRequired","oneOfType","string","defaultProps"],"mappings":"qxCAOMA,gCAKQC,iHACJA,aACDC,eACK,QACF,UACE,QACF,KAEHC,iBAAmBC,SAASC,EAAKF,iBAAiBG,QAAY,wBAbhDC,yEAoBdC,KAAKC,iBAAiB,SAAUC,KAAKP,uBACrCA,uEAOAK,KAAKG,oBAAoB,SAAUD,KAAKP,gEAOJO,KAAKT,MAAtCW,IAAAA,SAAUC,IAAAA,UAAcC,sDAC1BP,EAAYM,EACZE,cAAkBL,KAAKR,cAG3Bc,kCAAeF,GAAMG,IAAK,mBAAOC,EAAKV,KAAOW,OACjCJ,qDASmCL,KAAKF,KAA9CY,IAAAA,YAAaC,IAAAA,WACfC,EAAwB,IAAfD,EACTE,IAF2BC,YAENH,GAAcD,IAESV,KAAKF,KAA/CiB,IAAAA,aAAcC,IAAAA,UAChBC,EAAuB,IAAdD,EACTE,IAF2BC,aAELH,GAAaD,EAEN,mBAAxBf,KAAKT,MAAM6B,eACf7B,MAAM6B,eACHR,MACDK,QACEJ,SACCK,SAIPG,UAAWT,SAAQC,OAAMI,SAAQC,kBAI1C5B,SAASgC,oBACGC,UAAUC,KAAKC,qBACdF,UAAUG,WAAWH,UAAUI,OAAQJ,UAAUC,gBAClDD,UAAUC,MAGtBlC,SAASsC,wBACI"}